@model List<ServerManager.Servers>
@{
    ViewBag.Title = "Preferences";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("UpdateServers", "Preferences"))
{
    <table id="updateTable">
        <tr style="background:#888888">
            <th>Name</th>
            <th>Mac Address</th>
            <th>Powershell Session Address</th>
            <th>Ip Address</th>
            <th>Credentials</th>
            <th></th>
        </tr>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr id="@String.Concat("listRowId", Model[i].Id)">
                <td style="background: #cccccc">@Html.TextBoxFor(s => s[i].FriendlyName)</td>
                <td>@Html.TextBoxFor(s => s[i].MacAddress)</td>
                <td style="background: #cccccc">@Html.TextBoxFor(s => s[i].RemotePSAddress)</td>
                <td>@Html.TextBoxFor(s => s[i].IPAddress)</td>
                <td style="background: #cccccc">Username:<br />@Html.TextBoxFor(s => s[i].Username)<br />
                    Password:<br />@Html.TextBoxFor(s => s[i].Password)</td>
                <td>
                    @Html.HiddenFor(s => s[i].Id)
                    @Ajax.ActionLink("Delete", "DeleteServer", "Preferences", new { id = Model[i].Id }, new AjaxOptions
           {
               Confirm = "You are going to remove \"" + Model[i].FriendlyName + "\", are you sure of that?",
               HttpMethod = "Post",
               OnSuccess = "removeCurrentLine('" + Model[i].Id + "');",
               OnFailure = "onFailure"
           })
                </td>
            </tr>
        }
    </table>
    <input type="submit" value="Update Servers" />
}
@using (Ajax.BeginForm("CreateServer", "Preferences",new AjaxOptions
    {
        OnSuccess = "addServerLineUpdate",
        HttpMethod = "Post",
        OnFailure = "onFailure"
    }))
    {
    <div id="createBoxSrv">
        <fieldset id="newServer0">
            <legend>New Server</legend>
            @Html.Label("Name")
            <br />@Html.TextBox("[0].friendlyName", "", new { id = "_0__friendlyName" })
            <br />
            @Html.Label("MAC Address")
            <br />@Html.TextBox("[0].macAddress", "", new { id = "_0__macAddress" })
            <br />
            @Html.Label("Powershell Session Address")
            <br />@Html.TextBox("[0].remotePSAddress", "", new { id = "_0__remotePSAddress" })
            <br />
            @Html.Label("Powershell Session Username")
            <br />@Html.TextBox("[0].username", "", new { id = "_0__username" })
            <br />
            @Html.Label("Powershell Session Password")
            <br />@Html.TextBox("[0].password", "", new { id = "_0__password" })
            <br />
            @Html.Label("IP Address")
            <br />@Html.TextBox("[0].IPAddress", "", new { id = "_0__IPAddress" })
        </fieldset>
        <p style="height: 10px; background: white" id="sepa1" />
    </div>
    <button type="button" id="addSrvButton" title="Add another server"
        style="width: 35px">
        <b>+</b></button>
        <input type="submit" value="Add Server" />
    @*todo: add custom jQuery validation, for MAC Address for example.*@
}
@section scripts{
    
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function onFailure(result) {
            alert(result);
        }
        function addServerLineUpdate() {
            var currentFieldIndex=0;
            $("#createBoxSrv").find("fieldset").each(function () {
                var serversRow = $("#updateTable tr:last").clone();
                if ($(serversRow).attr("id") == "" || $(serversRow).attr("id") == null) {
                    //no existing row will generate a full one... (index 0)
                    //window.location.reload();
                    //todo later...
                    //todo: add header in row id...
                } else {
                    //get that clone and edit it!
                    var indexRow = $(serversRow).attr("id").replace("listRowId", "");
                    indexRow++;
                    $(serversRow).attr("id", "listRowId" + indexRow);
                    $("span.view", serversRow).remove();
                    //delete button update:
                    var delButton = $(serversRow).find("a");
                    delButton.attr("href", delButton.attr("href").substr(0, delButton.attr("href").lastIndexOf("/") + 1) + indexRow);
                    delButton.attr("data-ajax-success", "removeCurrentLine('" + indexRow + "')");
                    //we now should have only textboxes... update'em:
                    $(serversRow).find("input").each(function() {
                        $(this).attr("name", "[" + indexRow + "]." + $(this).attr("name").split(".")[1]);
                        if ($(this).attr("type") == "hidden") {
                            $(this).val(indexRow);
                        } else if ($(this).attr("name").indexOf("FriendlyName") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__friendlyName").val());
                            //delButton Text update...
                            delButton.attr("data-ajax-confirm", delButton.attr("data-ajax-confirm").split("\"")[0] + "\"" + $(this).attr("value") + "\"" + delButton.attr("data-ajax-confirm").split("\"")[2]);
                            $("#_"+currentFieldIndex+"__friendlyName").val("");
                        } else if ($(this).attr("name").indexOf("RemotePSAddress") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__RemotePSAddress").val());
                            $("#_" + currentFieldIndex + "__RemotePSAddress").val("");
                        } else if ($(this).attr("name").indexOf("MacAddress") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__macAddress").val());
                            $("#_" + currentFieldIndex + "__macAddress").val("");
                        } else if ($(this).attr("name").indexOf("IPAddress") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__IPAddress").val());
                            $("#_" + currentFieldIndex + "__IPAddress").val("");
                        } else if ($(this).attr("name").indexOf("Username") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__Username").val());
                            $("#_" + currentFieldIndex + "__Username").val("");
                        } else if ($(this).attr("name").indexOf("Password") >= 0) {
                            $(this).attr("value", $("#_" + currentFieldIndex + "__Password").val());
                            $("#_" + currentFieldIndex + "__Password").val("");
                        }
                    });
                    $(serversRow).appendTo("#updateTable");
                    //change back textboxes to span if necessary.
                    updateLoader("#updateTable");
                }
                if (currentFieldIndex > 0) {
                    //remove current newServer from list
                    $(this).remove();
                }
                currentFieldIndex++;
            });
        }
        var i = 1;
        function newSrvBox() {
            var mainField = $("#newServer0").clone();
            $(mainField).attr("id", "newServer" + i);
            var fn = $(mainField).find("#_0__friendlyName");
            fn.attr("name", "[" + i + "].friendlyName");
            fn.attr("id", "_" + i + "__friendlyName");
            fn.val("");
            var ma = $(mainField).find("#_0__macAddress");
            ma.attr("name", "[" + i + "].macAddress");
            ma.attr("id", "_" + i + "__macAddress");
            ma.val("");
            var rp = $(mainField).find("#_0__remotePSAddress");
            rp.attr("name", "[" + i + "].remotePSAddress");
            rp.attr("id", "_" + i + "__remotePSAddress");
            rp.val("");
            var u = $(mainField).find("#_0__username");
            u.attr("name", "[" + i + "].username");
            u.attr("id", "_" + i + "__username");
            u.val("");
            var p = $(mainField).find("#_0__password");
            p.attr("name", "[" + i + "].password");
            p.attr("id", "_" + i + "__password");
            p.val("");
            var ia = $(mainField).find("#_0__IPAddress");
            ia.attr("name", "[" + i + "].IPAddress");
            ia.attr("id", "_" + i + "__IPAddress");
            ia.val("");
            i++;
            var separator = $("#sepa1").clone();
            $(separator).attr("id", "sepa" + i);
            $(mainField).appendTo("#createBoxSrv");
            $(separator).appendTo("#createBoxSrv");
        }
        $(function () {
            $("#addSrvButton").click(function () {
                newSrvBox();
            });
            updateLoader("#updateTable");
            
        });
        //special update function: change everything to label and back to textbox on double click...
        function updateLoader(c) {
            $("span.view", c).remove();
            $(c).find("input").each(function () {
                if ($(this).attr("type") != "hidden") {
                    var txtEv = $("<span />", { text: this.value.length > 0 ? this.value : "N.A", "class": "view" });
                    txtEv.insertAfter(this);
                    $(this).hide();
                    txtEv.dblclick(function () {
                        $(this).closest("td").find("input,span.view").toggle();
                    });
                    $(this).dblclick(function () {
                        $(this).closest("td").find("input,span.view").toggle();
                        updateLoader($(this).closest("td"));
                    });
                }
            });
        }
        function removeCurrentLine(daL) {
            var idName = "listRowId" + daL;
            var box = document.getElementById(idName);
            $(box).remove();
        }
    </script>
}